'use client'

import Link from 'next/link';
import React, { useState } from 'react'
import * as yup from "yup";
import { useForm } from 'react-hook-form';
import { yupResolver } from '@hookform/resolvers/yup';
import { useRouter } from "next/navigation";
import Image from 'next/image';
import images from '@/public/images';
import '../../../styles/auth/signup.scss'
import { Button, Checkbox, Col, Form, Input, message, Row, Spin } from "antd";
import { LoadingOutlined } from "@ant-design/icons";
import { signup } from '@/api/auth';
import { setCookie } from '@/utils';

const SignUp = () => {
  const expirationHours = 12;
  const router = useRouter();
  const [isLoading, setIsLoading] = useState(false);

  const onFinish = async (values: any) => {
    setIsLoading(true);
    try {
      const res = await signup(values);
      if (res.status === 201) {
        setCookie('user', res.metadata.user, expirationHours);
        router.push('/otp-verified');
      }
    } catch (error: any) {
      message.error(error.response?.data?.message || 'ƒê√£ x·∫£y ra l·ªói, vui l√≤ng th·ª≠ l·∫°i.');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="flex justify-center items-center min-h-screen bg-gray-100"
      style={{
        background: `url(${images.background}) 0% 0% / contain`,
        backgroundSize: 'cover',
        backgroundPosition: 'center',
        backgroundAttachment: 'fixed',
        backgroundRepeat: 'no-repeat',
      }}
    >
      <div className="bg-white flex shadow-lg rounded-lg overflow-hidden w-full max-w-4xl">
        <div className="w-1/2 hidden lg:block">
          <Image
            src={images.imgSignUp}
            alt="Sign Up Image"
            className="h-full w-full object-cover"
          />
        </div>

        <div className="w-full lg:w-1/2 p-8">
          <h2 className="text-2xl font-bold text-center mb-6">Dao Tr·ªçng B√¨nh - Ng∆∞·ªùi gi√∫p vi·ªác nhi·ªát t√¨nh! üëã</h2>
          <Form
            layout="vertical"
            onFinish={onFinish}
            initialValues={{ username: '', name: '', phone: '', email: '', address: '' }}
          >
            <Row gutter={16}>
              <Col xs={24} md={12}>
                <Form.Item
                  label="T√™n ƒëƒÉng nh·∫≠p"
                  name="username"
                  rules={[{ required: true, message: 'T√™n ƒëƒÉng nh·∫≠p l√† b·∫Øt bu·ªôc' }]}
                >
                  <Input placeholder="Nh·∫≠p t√™n ƒëƒÉng nh·∫≠p" />
                </Form.Item>
              </Col>
              <Col xs={24} md={12}>
                <Form.Item
                  label="S·ªë ƒëi·ªán tho·∫°i"
                  name="phone"
                  rules={[
                    { required: true, message: 'S·ªë ƒëi·ªán tho·∫°i l√† b·∫Øt bu·ªôc' },
                    {
                      pattern: /^((\+84|0)[3|5|7|8|9])+([0-9]{8})$/,
                      message: 'S·ªë ƒëi·ªán tho·∫°i kh√¥ng h·ª£p l·ªá',
                    },
                  ]}
                >
                  <Input placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i" />
                </Form.Item>
              </Col>
            </Row>

            <Form.Item
              label="H·ªç t√™n"
              name="name"
              rules={[{ required: true, message: 'H·ªç t√™n l√† b·∫Øt bu·ªôc' }]}
            >
              <Input placeholder="Nh·∫≠p h·ªç t√™n" />
            </Form.Item>

            <Form.Item
              label="Email"
              name="email"
              rules={[
                { required: true, message: 'Email l√† b·∫Øt bu·ªôc' },
                { type: 'email', message: 'Email kh√¥ng h·ª£p l·ªá' },
              ]}
            >
              <Input placeholder="Nh·∫≠p email" />
            </Form.Item>

            {/* <Form.Item
              label="ƒê·ªãa ch·ªâ"
              name="address"
              rules={[{ required: true, message: 'ƒê·ªãa ch·ªâ l√† b·∫Øt bu·ªôc' }]}
            >
              <Input placeholder="Nh·∫≠p ƒë·ªãa ch·ªâ" />
            </Form.Item> */}

            <Row gutter={16}>
              <Col xs={24} md={12}>
                <Form.Item
                  label="M·∫≠t kh·∫©u"
                  name="password"
                  rules={[
                    { required: true, message: 'M·∫≠t kh·∫©u l√† b·∫Øt bu·ªôc' },
                    { min: 6, message: 'M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 6 k√Ω t·ª±' },
                    { max: 18, message: 'M·∫≠t kh·∫©u kh√¥ng ƒë∆∞·ª£c qu√° 18 k√Ω t·ª±' },
                  ]}
                >
                  <Input.Password placeholder="Nh·∫≠p m·∫≠t kh·∫©u" />
                </Form.Item>
              </Col>
              <Col xs={24} md={12}>
                <Form.Item
                  label="Nh·∫≠p l·∫°i m·∫≠t kh·∫©u"
                  name="confirmPassword"
                  dependencies={['password']}
                  rules={[
                    { required: true, message: 'Nh·∫≠p l·∫°i m·∫≠t kh·∫©u l√† b·∫Øt bu·ªôc' },
                    ({ getFieldValue }) => ({
                      validator(_, value) {
                        if (!value || getFieldValue('password') === value) {
                          return Promise.resolve();
                        }
                        return Promise.reject('M·∫≠t kh·∫©u nh·∫≠p l·∫°i kh√¥ng kh·ªõp');
                      },
                    }),
                    { min: 6, message: 'M·∫≠t kh·∫©u nh·∫≠p l·∫°i ph·∫£i c√≥ √≠t nh·∫•t 6 k√Ω t·ª±' },
                    { max: 18, message: 'M·∫≠t kh·∫©u nh·∫≠p l·∫°i kh√¥ng ƒë∆∞·ª£c qu√° 18 k√Ω t·ª±' },
                  ]}
                >
                  <Input.Password placeholder="Nh·∫≠p l·∫°i m·∫≠t kh·∫©u" />
                </Form.Item>
              </Col>
            </Row>

            <Button
              type="primary"
              htmlType="submit"
              block
              className="mt-4 h-14 custom-btn"
              icon={isLoading ? <LoadingOutlined /> : null}
              disabled={isLoading}
            >
              {isLoading ? 'ƒêang x·ª≠ l√Ω...' : 'ƒêƒÉng k√Ω'}
            </Button>
          </Form>

          <div className="text-center mt-4">
            ƒê√£ c√≥ t√†i kho·∫£n?{' '}
            <Link href="/sign-in" className="text-blue-500 hover:underline">
              ƒêƒÉng nh·∫≠p
            </Link>
          </div>
        </div>
      </div>
    </div>
  )
}

export default SignUp